%prefix "cap"
%auxil "struct cst_Root*"
%value "cst_index"

%header {
    #define PCC_AST_NODE_CUSTOM_DATA_DEFINED

    #include "ast/cst.h"
    #include "error.h"

    #define _cap_ADDNODE(node) \
        cst_node_add(auxil, cst_NODEDOWNCAST(node))
    #define _cap_LASTNODE auxil->node_count-1
    #define _cap_MKNODE(type) \
        (struct cst_n##type*)malloc(sizeof(struct cst_n##type))
    #define _cap_MKINITNODE(type, ...) \
        cst_ninit_##type(_cap_MKNODE(type), __VA_ARGS__)
    #define _cap_COPYSTR(frm) \
        strcpy(malloc(((strlen(frm) + 1) * sizeof(char))), frm)
}
%source {
    #include "ast/cst.c"
    #include "error.c"
}

_start <- n:expression { $$ = n; }

%import "grammar/whitespace.peg"
%import "grammar/atoms.peg"
%import "grammar/expression.peg"
