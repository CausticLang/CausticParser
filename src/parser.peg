%prefix "cap"
%auxil "struct cap_ParserState*"
%value "cst_index"

%header {
    #include "src/parser_state.h"
    //#include "src/error.h"
    #include "src/ast/cst.h"

    #include "src/grammar/helper.h"

    #define PCC_AST_NODE_CUSTOM_DATA_DEFINED
    /*#define PCC_ERROR(auxil, event, rule, level, pos, buffer, length) \
        cap_debug(auxil, event, rule, level, pos, buffer, length);*/
}
%source {
    #include "src/parser_state.c"
    #include "src/error.h"
    #include "src/ast/cst.c"
}

_start <-
    { $$ = 0; _cap_ADDNODE(_cap_MKINITNODE(Entrypoint, 0)); }
    _ n:block_inner { cst_NODECAST(Entrypoint, auxil->root->nodes[0])->node = n; }
    _ EOF ~ { _cap_ERROR("_start", "Expected EOF"); }

%import "grammar/atoms.peg"
%import "grammar/block.peg"
%import "grammar/expression.peg"
%import "grammar/invoke.peg"
%import "grammar/procedure.peg"
%import "grammar/statements.peg"
%import "grammar/whitespace.peg"

%%

#include "src/error.c"
